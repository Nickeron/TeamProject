@model IEnumerable<Interest>
@{
	ViewData["Title"] = "CreatePost";
}

<h2>CreatePost</h2>

<div id="form">
	<label>Say something</label>
	<input id="postText" /> <br />

	<select name="interest" id="interest" onchange="addInterest(this)" >
		@foreach (Interest interest in Model)
		{
			<option id="@interest.InterestCategory" value="@interest.InterestCategory">@interest.InterestCategory</option>
		}
	</select>

	<button onclick="sendRequest(this)">Save Post</button>
</div>

<script>
	let interests = [];

	function addInterest(element) {
		//window.event.preventDefault();
		interests.push(element.value);
		//var interestinpost = document.getElementById(element.value)
		//interestinpost.value = element.value
		//fadeOutEffect(element.id)
		console.log(interests);
	}

	function sendRequest(e)
	{
		let urlToSendRequest = "https://" + window.location.host + "@Url.Action("ShowUserPosts", "Home")";

		 let data =
			 {
			postText: document.getElementById("postText").value,
			interests: interests
		};

		(async () =>
		{
			const rawResponse = await
				fetch(urlToSendRequest,
			{
				method: 'POST',
				headers:
				{
					'Accept': 'application/json',
					'Content-Type': 'application/json',
				},
				credentials: "same-origin",
				body: JSON.stringify(data)
			});
		})();
		alert("Post Created!");

	}


	function fadeOutEffect(userId) {
		var element = document.getElementById(userId);
		console.log(userId);
		var fadeEffect = setInterval(
			function ()
			{
				if (!element.style.opacity)
				{
					element.style.opacity = 1;
				}
				if (element.style.opacity < 0.1)
				{
					clearInterval(fadeEffect);
				}
				else
				{
					element.style.opacity -= 0.1;
				}
			}, 100);
	}
</script>
