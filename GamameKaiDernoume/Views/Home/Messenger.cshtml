@model MessengerViewModel
@{
	ViewData["Title"] = "Messenger";
}
<ul class="list-group">
	@foreach (User friend in Model.ThisUsersFriends)
	{
		<li class="list-group-item list-group-item-action" id="friend-side">
			<option id="@friend.Id" onclick="setActiveUser(this)" value=@friend.UserName>@friend.UserAvatar @friend.UserName</option>
		</li>
	}
</ul>

<div class="container">
	<div class="row">&nbsp;</div>
	<div class="row">
		<div class="col-6">&nbsp;</div>
		<div class="col-6">
			<option type="text" value="@Model.UserName" id="userName">@Model.UserName</option>
			<br />
			Message <input type="text" id="messageInput" />
			<input type="button" id="sendButton" value="Send" />
		</div>
	</div>
	<div class="row">
		<div class="col-12">
			<hr />
		</div>
	</div>
	<h3 id="activeUser" value="">No active user</h3>
	<div class="row">
		<div class="col-6">&nbsp;</div>
		<div class="col-6">
			<ul id="messagesList"></ul>
		</div>
	</div>
</div>
<script src="~/lib/signalr/signalr.js"></script>
<script src="~/js/chat.js"></script>

<script>
	function setActiveUser(element)
	{
		const activeUser = document.getElementById("activeUser");
		activeUser.value = element.id;
		activeUser.innerHTML = element.value;
		console.log(activeUser.value);
	}

	function sendRequest(userId, message)
	{
		var urlToSendRequest = "https://" + window.location.host + "@Url.Action("SendMessage", "Home")";

		let data =
			{
				receiverID: userId,
				messageText: message
			};
		(async () =>
		{
		const rawResponse =	await fetch(urlToSendRequest,
		{
		method: 'POST',
		headers:
		{
		'Accept': 'application/json',
		'Content-Type': 'application/json',
		},
		credentials: "same-origin",
		body: JSON.stringify(data)
		});
		})();
	}
</script>

