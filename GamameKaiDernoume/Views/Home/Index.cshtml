@model IEnumerable<Post>
@{
	ViewData["Title"] = "Home Page";
}

<h2>My Wall</h2>

@foreach (Post post in Model)
{
	<div class="jumbotron">
		<div class="card border-info mb-3">
			@if (!(post.PostImage is null))
			{
				<img class="card-img-top" src="@post.PostImage" alt="@post.PostText">
			}
			<span class="badge badge-secondary">@post.PostScope</span>
			<div class="card-body">
				<p class="card-title">
					@post.User.FirstName @post.User.LastName
					@foreach (var interest in post.PostInterests)
					{
						<span class="badge badge-primary">@interest.Interest.InterestCategory</span>
					}
				</p>
				<p class="text-muted">
					@post.PostDate
				</p>
				<h2 class="card-text">
					@post.PostText
				</h2>
				<p>
					<button type="button" class="btn btn-primary btn-sm">
						<span><i class="far fa-thumbs-up"></i></span>
						@post.Reactions.Where(r => r.IsLike).ToList().Count
					</button>
					<button type="button" class="btn btn-primary btn-sm">
						<span><i class="far fa-thumbs-down"></i></span>
						@post.Reactions.Where(r => !r.IsLike).ToList().Count
					</button>
				</p>
				<p>
					<button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseComment-@post.PostID">
						Comment
					</button>
				</p>
				<div class="collapse" id="collapseComment-@post.PostID">
					<div class="input-group mb-3">
						<input type="text" class="form-control" id="commentText-@post.PostID" placeholder="Write a new comment.." aria-label="A new comment" aria-describedby="basic-addon2" />
						<div class="input-group-append">
							<button onclick="CreateNewComment(@post.PostID)" type="button" class="btn btn-secondary" data-toggle="collapse" data-target="#collapseComment-@post.PostID">
								Send Comment
							</button>
						</div>
					</div>
				</div>
				<ul id="listOfComments-@post.PostID" class="list-group list-group-flush">
					@foreach (Comment postComment in post.Comments)
					{
						<li id="listItemComment-@post.PostID" class="list-group-item">@postComment.User.UserName @postComment.CommentText</li>
					}
				</ul>
			</div>
		</div>
	</div>
}
<script src="~/lib/signalr/signalr.js"></script>
<script src="~/js/comment.js"></script>
<script>
	function SendNewCommentData(PostID) {
		const commentsTextElement = document.getElementById('commentText-' + PostID);
		const commentsText = commentsTextElement.value;
		commentsTextElement.value = "";
		console.log(PostID, commentsText);

		let data={
			postID : PostID,
            commentText: commentsText };

		var urlToSendRequest = "https://" + window.location.host + "@Url.Action("AddNewCommentToPost", "Home")";

		(async () =>
		{
			const rawResponse =	await fetch(urlToSendRequest,
			{
				method: 'POST',
				headers:
				{
					'Accept': 'application/json',
					'Content-Type': 'application/json',
				},
				credentials: "same-origin",
				body: JSON.stringify(data)
			});

		})();
	}
</script>
