@model MyWallViewModel
@{
	ViewData["Title"] = "Home Page";
}

<partial name="_CreatePostPartial" />
<!-- Button TO CREATE A NEW POST modal -->
<br />
<button type="button" class="btn-lg btn-success btn-block" data-toggle="modal" data-target="#createPost">Create a new Post</button>
<br />
@foreach (Post post in Model.Posts)
{
	<div class="jumbotron">
		<div class="card border-info mb-3">
			<div class="card-body">
				<p class="card-title">
					@if (post.User.UserAvatar is null)
					{
						<i class="fas fa-user-astronaut"></i>
					}
					else
					{
						<img src="@post.User.UserAvatar" class="img-thumbnail">
					}
					@post.User.FirstName @post.User.LastName
					@foreach (var interest in post.PostInterests)
					{
						<a asp-controller="Home"
							asp-action="Index" 
							asp-route-id="@interest.Interest.InterestID" 
						   class="badge badge-primary">
							@interest.Interest.InterestCategory
						</a>
					}
				</p>
				<p class="text-muted">
					<time class="post-date" datetime="@post.PostDate">@post.PostDate</time>

					@if (@post.PostScope == Scope.Global)
					{
						<i class="fas fa-globe"></i>
					}
					else
					{
						<i class="fas fa-user-secret"></i>
					}
				</p>
				<h2 class="card-text">
					@post.PostText
				</h2>
				@if (!(post.PostImage is null))
				{
					<img class="card-img-top" src="@post.PostImage" alt="@post.PostText">
				}
				<p>
					<div class="btn-group btn-group-toggle" data-toggle="buttons">
						<label class="btn btn-outline-dark">
							<i class="far fa-thumbs-up"></i>
							<input type="radio" id="Like-@post.PostID" onchange="AddReaction(@post.PostID, true)" />
							<span id="like-count-@post.PostID">@post.Reactions.Where(r => r.IsLike).ToList().Count</span>
						</label>
						<label class="btn btn-outline-dark">
							<i class="far fa-thumbs-down"></i>
							<input type="radio" id="DisLike-@post.PostID" onchange="AddReaction(@post.PostID, false)">
							<span id="dislike-count-@post.PostID">@post.Reactions.Where(r => !r.IsLike).ToList().Count</span>
						</label>
					</div>
					<button type="button" class="btn btn-outline-dark" data-toggle="collapse" data-target="#collapseComment-@post.PostID"><i class="fas fa-comment"></i> Comment</button>
				</p>
				<div class="collapse" id="collapseComment-@post.PostID">
					<div class="input-group mb-3">
						<input type="text" class="form-control" id="commentText-@post.PostID" placeholder="Write a new comment.." aria-label="A new comment" aria-describedby="basic-addon2" />
						<div class="input-group-append">
							<button onclick="CreateNewComment(@post.PostID)" type="button" class="btn btn-secondary" data-toggle="collapse" data-target="#collapseComment-@post.PostID">
								Send Comment
							</button>
						</div>
					</div>
				</div>

			</div>
		</div>
		<ul id="listOfComments-@post.PostID" class="list-group">
			@foreach (Comment postComment in post.Comments.OrderByDescending(p => p.CommentDate))
			{
				<li id="listItemComment-@post.PostID" class="list-group-item">@postComment.User.UserName @postComment.CommentText</li>
			}
		</ul>
	</div>
}

<script src="~/lib/signalr/signalr.js"></script>
<script src="~/js/comment.js"></script>

<script>

	async function SendReaction(PostID, isLike) {

		let data = {
			postID: PostID,
			isLike: isLike
		};

		return await sendData("@Url.Action("AddReactionToPost", "Home")", data);
	}

	async function SendNewCommentData(PostID)
	{
		const commentsTextElement = document.getElementById('commentText-' + PostID);
		const commentsText = commentsTextElement.value;
		commentsTextElement.value = "";

		let data = {
			postID: PostID,
			commentText: commentsText
		};

		return await sendData("@Url.Action("AddNewCommentToPost", "Home")", data);
	}

</script>
